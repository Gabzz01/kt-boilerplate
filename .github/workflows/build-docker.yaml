name: üê≥ Build Docker images
run-name: ${{ github.actor }} is building Docker images.
permissions: write-all
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-codebase:
    name: Build codebase
    uses: ./.github/workflows/build-code.yaml

  build-image:
    name: Build & push Docker image
    needs: build-codebase
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-codebase.outputs.app-build }}
          path: ./build/libs/

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}/app
          tags: type=sha

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          build-args: |
            DD_GIT_REPOSITORY_URL=${{ github.server_url }}/${{ github.repository }}.git
            DD_GIT_COMMIT_SHA=${{ github.sha }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  scan-image:
    name: Scan Docker image for vulnerabilities
    needs: [build-image]
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ needs.build-image.outputs.tag }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  # # Call the GitOps workflow to update the staging docker-compose stack with the updated image.
  # do-gitops:
  #   uses: ./.github/workflows/gitops-staging.yaml
  #   needs: [build-image]
  #   with:
  #     app-img: ${{ needs.build-image.outputs.tag }}
  #   secrets:
  #     GITOPS_BOT_GITHUB_TOKEN: ${{ secrets.GITOPS_BOT_GITHUB_TOKEN }}